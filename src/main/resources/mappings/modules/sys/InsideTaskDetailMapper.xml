<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.fundview.setting.dao.InsideTaskDetailMapper" >
  <resultMap id="BaseResultMap" type="cn.fundview.setting.model.InsideTaskDetail" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="work_time" property="workTime" jdbcType="REAL" />
    <result column="work_date" property="workDate" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="done" property="done" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithJoin" type="cn.fundview.setting.model.InsideTaskDetail" extends="BaseResultMap" >
    <association column="user_id" property="user" select="cn.fundview.setting.dao.UserDao.get"></association>
    <association column="order_id" property="insideTask" select="cn.fundview.setting.dao.InsideTaskMapper.selectByOrderId"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, user_id, work_time, work_date,create_date, description, done
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_task_detail
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByOrderId" resultMap="ResultMapWithJoin" >
    select
    <include refid="Base_Column_List" />
    from t_task_detail
    where order_id = #{orderId,jdbcType=VARCHAR}
    ORDER BY t_task_detail.work_date DESC
  </select>
  <select id="selectHandleTimerByOrderId" resultMap="BaseResultMap">
    select
    t_task_detail.id,
    t_task_detail.order_id,
    t_task_detail.user_id,
    sum(t_task_detail.work_time) as work_time,
    t_task_detail.work_date,
    t_task_detail.create_date,
    t_task_detail.description,
    t_task_detail.done
    from t_task_detail
    where order_id = #{orderId,jdbcType=VARCHAR}
    GROUP BY t_task_detail.work_date
  </select>
  <select id="selectCountTimeByOrderId" resultType="java.lang.Float">
    SELECT
    COALESCE(SUM(t_task_detail.work_time),0)
    FROM
    t_task_detail
    WHERE
    t_task_detail.order_id = #{orderId,jdbcType=VARCHAR}
    ORDER BY t_task_detail.order_id
  </select>
  <select id="selectAll" resultMap="ResultMapWithJoin">
    select
    <include refid="Base_Column_List" />
    from t_task_detail
    ORDER BY t_task_detail.work_date DESC
  </select>
  <select id="selectByUserId" resultMap="ResultMapWithJoin">
    select
    <include refid="Base_Column_List" />
    from t_task_detail
    where t_task_detail.user_id = #{userId,jdbcType=VARCHAR}
    ORDER BY t_task_detail.work_date DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_task_detail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.fundview.setting.model.InsideTaskDetail" >
    insert into t_task_detail (id, order_id, user_id, 
      work_time, work_date, create_date,description,
      done)
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{workTime,jdbcType=REAL}, #{workDate,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR},
      #{done,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.fundview.setting.model.InsideTaskDetail" >
    insert into t_task_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="workTime != null" >
        work_time,
      </if>
      <if test="workDate != null" >
        work_date,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="done != null" >
        done,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        #{workTime,jdbcType=REAL},
      </if>
      <if test="workDate != null" >
        #{workDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="done != null" >
        #{done,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.fundview.setting.model.InsideTaskDetail" >
    update t_task_detail
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null" >
        work_time = #{workTime,jdbcType=REAL},
      </if>
      <if test="workDate != null" >
        work_date = #{workDate,jdbcType=TIMESTAMP},
      </if>
      <if test="workDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="done != null" >
        done = #{done,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.fundview.setting.model.InsideTaskDetail" >
    update t_task_detail
    set order_id = #{orderId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      work_time = #{workTime,jdbcType=REAL},
      work_date = #{workDate,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      done = #{done,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>